# Docker Compose file for VA-Care development environment

services:
  # Development combined service
  va-care-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "3000:3000"  # Frontend dev server
      - "8000:8000"  # Backend API
    environment:
      - NODE_ENV=development
      - PYTHONUNBUFFERED=1
      - FASTAPI_ENV=development
      - DATABUTTON_PROJECT_ID=e450d618-b3ca-4f0d-8025-e82ad27b100e
      - FIREBASE_PROJECT_ID=vacare-1abb5
      - FIREBASE_API_KEY=AIzaSyBtGtKZgMR_kuqyGcG2iHP7BH9WjAhnQeU
      - FIREBASE_AUTH_DOMAIN=vacare-1abb5.firebaseapp.com
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - /app/backend/__pycache__    # Prevent overwriting cache
    restart: unless-stopped
    networks:
      - va-care-dev-network
    depends_on:
      - redis-dev
      - postgres-dev

  # Separate frontend service (alternative approach)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: frontend-dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8001
    volumes:
      - ./frontend:/app/frontend
    networks:
      - va-care-dev-network
    profiles:
      - separate  # Only run when --profile separate is used

  # Separate backend service (alternative approach)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: backend-dev
    ports:
      - "8001:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - FASTAPI_ENV=development
      - DATABASE_URL=postgresql://vacare:vacare_dev@postgres-dev:5432/vacare_dev
      - REDIS_URL=redis://redis-dev:6379
    volumes:
      - ./backend:/app/backend
      - /app/backend/__pycache__
    networks:
      - va-care-dev-network
    depends_on:
      - redis-dev
      - postgres-dev
    profiles:
      - separate

  # Redis for development
  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_dev_data:/data
    networks:
      - va-care-dev-network
    command: redis-server --appendonly yes

  # PostgreSQL for development
  postgres-dev:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vacare_dev
      POSTGRES_USER: vacare
      POSTGRES_PASSWORD: vacare_dev
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Init SQL file not present; remove to avoid startup error
      # - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - va-care-dev-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vacare.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - va-care-dev-network
    depends_on:
      - postgres-dev
    profiles:
      - tools

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis-dev:6379
    ports:
      - "8081:8081"
    networks:
      - va-care-dev-network
    depends_on:
      - redis-dev
    profiles:
      - tools

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface
    networks:
      - va-care-dev-network
    profiles:
      - tools

volumes:
  redis_dev_data:
  postgres_dev_data:
  pgadmin_data:

networks:
  va-care-dev-network:
    driver: bridge
