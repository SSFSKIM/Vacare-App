# Docker Compose configuration for VA-Care production environment

services:
  va-care:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - DATABUTTON_PROJECT_ID=${DATABUTTON_PROJECT_ID}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_AUTH_DOMAIN=${FIREBASE_AUTH_DOMAIN}
      - FIREBASE_STORAGE_BUCKET=${FIREBASE_STORAGE_BUCKET}
      - FIREBASE_MESSAGING_SENDER_ID=${FIREBASE_MESSAGING_SENDER_ID}
      - FIREBASE_APP_ID=${FIREBASE_APP_ID}
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - va-care-network

  # Development mode with hot reload
  va-care-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "3000:3000"  # Frontend dev server
      - "8000:8000"  # Backend API
    environment:
      - NODE_ENV=development
      - DATABUTTON_PROJECT_ID=e450d618-b3ca-4f0d-8025-e82ad27b100e
    volumes:
      - ./frontend:/app/frontend
      - ./backend:/app/backend
      - /app/frontend/node_modules
      - /app/backend/__pycache__
    restart: unless-stopped
    networks:
      - va-care-network
    profiles:
      - dev

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - va-care-network
    profiles:
      - cache

  # PostgreSQL for additional data storage (optional)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - va-care-network
    profiles:
      - database

volumes:
  redis_data:
  postgres_data:

networks:
  va-care-network:
    driver: bridge
